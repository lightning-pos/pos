schema {
  query: Query
  mutation: Mutation
}

enum ItemGroupState {
  ACTIVE
  INACTIVE
  DELETED
}

enum ItemNature {
  GOODS
  SERVICE
}

enum ItemState {
  ACTIVE
  INACTIVE
  DELETED
}

enum SalesOrderState {
  DRAFT
  COMPLETED
  CANCELLED
}

enum UserState {
  ACTIVE
  INACTIVE
  LOCKED
}

input CartNewInput {
  customerId: DbUuid
  cartData: String!
}

input CartUpdateInput {
  id: DbUuid!
  cartData: String
}

input CustomerNewInput {
  fullName: String!
  email: String
  phone: String
  address: String
}

input CustomerUpdateInput {
  id: DbUuid!
  fullName: String
  email: String
  phone: String
  address: String
}

input ItemGroupNew {
  name: String!
  description: String
}

input ItemGroupUpdate {
  id: DbUuid!
  name: String
  description: String
  state: ItemGroupState
  updatedAt: LocalDateTime
}

input ItemTaxNewInput {
  itemId: DbUuid!
  taxId: DbUuid!
}

input NewItem {
  name: String!
  description: String
  nature: ItemNature!
  state: ItemState!
  price: Money!
  categoryId: DbUuid!
  taxIds: [DbUuid!]
}

input SalesOrderItemInput {
  itemId: DbUuid!
  itemName: String!
  quantity: Int!
  priceAmount: Money!
  taxAmount: Money!
  totalAmount: Money!
}

input SalesOrderNewInput {
  customerId: DbUuid!
  customerName: String!
  customerPhoneNumber: String!
  orderDate: LocalDateTime!
  netAmount: Money!
  discAmount: Money!
  taxableAmount: Money!
  taxAmount: Money!
  totalAmount: Money!
  state: SalesOrderState!
  items: [SalesOrderItemInput!]!
}

input SupplierNewInput {
  name: String!
  address: String
  phone: String
}

input SupplierUpdateInput {
  id: DbUuid!
  name: String
  address: String
  phone: String
}

input TaxNewInput {
  name: String!
  rate: Percentage!
  description: String
  itemIds: [DbUuid!]
}

input TaxUpdateInput {
  id: DbUuid!
  name: String
  rate: Percentage
  description: String
}

input UpdateItem {
  id: DbUuid!
  name: String
  description: String
  nature: ItemNature
  state: ItemState
  price: Money
  categoryId: DbUuid
  updatedAt: LocalDateTime
}

input UserNewInput {
  username: String!
  pin: String!
  fullName: String!
}

input UserUpdateInput {
  id: DbUuid!
  username: String
  pin: String
  fullName: String
  state: UserState
}

scalar DbUuid

"""
  Combined date and time (without time zone) in `yyyy-MM-dd HH:mm:ss` format.

  See also [`chrono::NaiveDateTime`][1] for details.

  [1]: https://docs.rs/chrono/latest/chrono/naive/struct.NaiveDateTime.html
"""
scalar LocalDateTime

scalar Money

scalar Percentage

type AnalyticsOverview {
  totalSales: Money!
  totalOrders: Int!
  totalCustomers: Int!
  totalProducts: Int!
}

type Cart {
  id: DbUuid!
  cartData: String!
  customerId: DbUuid
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
  customer: Customer
}

type Customer {
  id: DbUuid!
  fullName: String!
  email: String
  phone: String
  address: String
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
}

type Item {
  id: DbUuid!
  name: String!
  description: String
  nature: ItemNature!
  state: ItemState!
  price: Money!
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
  category: ItemGroup!
  taxes: [Tax!]!
}

type ItemGroup {
  id: DbUuid!
  name: String!
  description: String
  state: ItemGroupState!
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
}

type Mutation {
  login(username: String!, password: String!): Boolean!
  logout: Boolean!
  addUser(user: UserNewInput!): User!
  updateUser(user: UserUpdateInput!): User!
  deleteUser(id: DbUuid!): Int!
  createItem(item: NewItem!): Item!
  updateItem(item: UpdateItem!): Item!
  deleteItem(id: DbUuid!): Int!
  createItemCategory(newCategory: ItemGroupNew!): ItemGroup!
  updateItemCategory(category: ItemGroupUpdate!): ItemGroup!
  deleteItemCategory(id: DbUuid!): Int!
  createSalesOrder(salesOrder: SalesOrderNewInput!): SalesOrder!
  voidSalesOrder(id: DbUuid!): SalesOrder!
  createCart(cart: CartNewInput!): Cart!
  updateCart(cart: CartUpdateInput!): Cart!
  deleteCart(id: DbUuid!): Int!
  createCustomer(customer: CustomerNewInput!): Customer!
  updateCustomer(customer: CustomerUpdateInput!): Customer!
  deleteCustomer(id: DbUuid!): Int!
  createTax(input: TaxNewInput!): Tax!
  updateTax(input: TaxUpdateInput!): Tax!
  deleteTax(id: DbUuid!): Int!
  assignTaxToItem(input: ItemTaxNewInput!): Int!
  removeTaxFromItem(itemId: DbUuid!, taxId: DbUuid!): Int!
  createSupplier(supplier: SupplierNewInput!): Supplier!
  updateSupplier(supplier: SupplierUpdateInput!): Supplier!
  deleteSupplier(id: DbUuid!): Int!
}

type Query {
  apiVersion: String!
  itemCategories(first: Int, offset: Int): [ItemGroup!]!
  itemsCategory(id: DbUuid!): ItemGroup!
  items(first: Int, offset: Int): [Item!]!
  item(id: DbUuid!): Item!
  users(first: Int, offset: Int): [User!]!
  user(id: DbUuid!): User!
  customers(first: Int, offset: Int): [Customer!]!
  totalCustomers: Int!
  customer(id: DbUuid!): Customer!
  customerByPhone(phone: String!): Customer!
  salesOrders(first: Int, offset: Int): [SalesOrder!]!
  totalSalesOrders: Int!
  salesOrder(id: DbUuid!): SalesOrder!
  carts(first: Int, offset: Int): [Cart!]!
  totalCarts: Int!
  cart(id: DbUuid!): Cart!
  taxes(first: Int, offset: Int): [Tax!]!
  totalTaxes: Int!
  tax(id: DbUuid!): Tax!
  analyticsOverview(days: Int): AnalyticsOverview!
  suppliers(first: Int, offset: Int): [Supplier!]!
  totalSuppliers: Int!
  supplier(id: DbUuid!): Supplier!
}

type SalesOrder {
  id: DbUuid!
  customerId: DbUuid!
  customerName: String!
  customerPhoneNumber: String!
  orderDate: LocalDateTime!
  netAmount: Money!
  discAmount: Money!
  taxableAmount: Money!
  taxAmount: Money!
  totalAmount: Money!
  state: SalesOrderState!
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
  customer: Customer!
  items: [SalesOrderItem!]!
}

type SalesOrderItem {
  id: DbUuid!
  orderId: DbUuid!
  itemId: DbUuid!
  itemName: String!
  quantity: Int!
  priceAmount: Money!
  taxAmount: Money!
  totalAmount: Money!
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
}

type Supplier {
  id: DbUuid!
  name: String!
  address: String
  phone: String
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
}

type Tax {
  id: DbUuid!
  name: String!
  rate: Percentage!
  description: String
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
}

type User {
  id: DbUuid!
  username: String!
  fullName: String!
  state: UserState!
  lastLoginAt: LocalDateTime
  createdAt: LocalDateTime!
  updatedAt: LocalDateTime!
}
